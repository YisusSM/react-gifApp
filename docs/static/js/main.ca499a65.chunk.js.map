{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACtCC,EADsC,KAC1BC,EAD0B,KAgB9C,OAEQ,sBACAC,SAZa,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOd,SAEA,uBACAO,KAAO,OACPC,MAAUT,EACVU,SApBkB,SAACP,GAEvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAIbC,EAJa,iDAIoCC,UAAWH,GAJ/C,+DAKAI,MAAOF,GALP,cAKbG,EALa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE9B,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAKvCa,QAAQC,IAAIR,GAnBO,kBAoBXA,GApBW,4CAAH,sDCAPS,EAAc,SAAC,GAAyB,EAAtBN,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGtC,OACI,sBAAKgB,UAAY,6DAAjB,UACG,qBAAKC,IAAQjB,EAAMkB,IAAQR,IAC3B,kCAAMA,EAAN,WCHES,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IAL2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA2BxC,OAlBAC,qBAAW,WAEP1B,EAASC,GACR0B,MAAM,SAAAC,GAIHH,EAAS,CACFjB,KAAMoB,EACTL,SAAS,SAOlB,CAAEtB,IAEEuB,EDxB0BK,CAAc5B,GAAnCa,EAHyB,EAG/BN,KAAce,EAHiB,EAGjBA,QAGpB,OACI,qCAEI,oBAAIJ,UAAY,oDAAhB,SAAuElB,IACrEsB,GAAW,mBAAGJ,UAAY,mDAAf,qBACb,qBAAKA,UAAY,WAAjB,SAIYL,EAAOJ,KAAK,SAAAC,GACZ,OAAO,cAAC,EAAD,eAEFA,GADEA,EAAIC,aElBtBkB,EAAe,WAAO,IAAD,EAIM3C,mBAAS,CAAE,mBAJjB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAOlC,OACA,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQ6C,EAAWrB,KAAK,SAAAT,GACZ,OAAO,cAAC,EAAD,CACPA,SAAYA,GACLA,Y,MCjBvB+B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.ca499a65.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    const [ inputValue, setInputValue ] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue( e.target.value );\r\n    }\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length >2){\r\n            setCategories( cats => [ inputValue, ...cats  ] );\r\n            setInputValue('');\r\n        }\r\n       \r\n\r\n    }\r\n    return (\r\n        \r\n            <form\r\n            onSubmit = {handleSubmit}>\r\n            <input \r\n            type = \"text\"\r\n            value = { inputValue }\r\n            onChange = { handleInputChange }\r\n            />\r\n            </form>\r\n            \r\n        \r\n    )\r\n\r\n    AddCategory.prototypes = {\r\n        setCategories: PropTypes.func.isRequired\r\n    }\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n   \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=50&api_key=wRz6yv5g9L6NqTFsyT4FGIlZHuvXfSD5`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n \r\n     const gifs = data.map( img => {\r\n \r\n     return {\r\n \r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url,\r\n \r\n     }\r\n \r\n    } )\r\n    console.log(gifs);\r\n     return gifs;\r\n     \r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    \r\n    return (\r\n        <div className = \"card animate__animated animate__bounce animate__fadeInLeft\">\r\n           <img src = { url } alt = { title } />\r\n           <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n\r\n  const { data: images, loading } =  useFetchGifs( category );\r\n\r\n    \r\n    return (\r\n        <>\r\n        \r\n            <h3 className = \"animate__animated animate__bounce animate__fadeIn\" >{ category }</h3>\r\n            { loading && <p className = \"animate__animated animate__bounce animate__pulse\" >Loading</p> }\r\n            <div className = \"cardGrid\"> \r\n            \r\n                \r\n                    {\r\n                        images.map( img  => {\r\n                        return <GifGridItem \r\n                        key = {img.id} \r\n                        { ...img }\r\n                        />\r\n                        } )\r\n                    }\r\n            \r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n    \r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n           \r\n                \r\n            setState({\r\n                   data: imgs,\r\n                loading: false\r\n            });\r\n\r\n           \r\n\r\n        } );\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n\r\n    const [categories, setCategories] = useState([ 'Jujutsu Kaisen' ] )\r\n\r\n\r\nreturn (\r\n<>\r\n    <h2>GiftExpertApp</h2>\r\n    <AddCategory setCategories = {setCategories}/> \r\n    <hr />\r\n\r\n    \r\n    <ol>\r\n        {\r\n            categories.map( category => {\r\n                return <GifGrid \r\n                category = {category} \r\n                key = {category} \r\n                /> \r\n            } )\r\n        }\r\n    </ol>\r\n</>\r\n\r\n)}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExperApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals(console.log);\n"],"sourceRoot":""}